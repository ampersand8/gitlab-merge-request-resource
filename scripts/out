#!/bin/bash
# vim: set ft=sh

set -e -u -x

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

TMPDIR=${TMPDIR:-/tmp}

source "$(dirname "$0")/common.sh"

destination=$1

if [ -z "${destination}" ]; then
  echo "usage: $0 <path/to/destination>" >&2
  exit 1
fi

payload="$(mktemp "${TMPDIR}/gitlab-merge-request-resource.XXXXXX")"

cat > "${payload}" <&0

gitlab_host="$(jq -r '.source.gitlab_host // ""' < "${payload}")"
private_token="$(jq -r '.source.private_token // ""' < "${payload}")"
project_path="$(jq -r '.source.project_path // ""' < "${payload}")"
params="$(jq -r '.params // ""' < "${payload}")"
path_to_repo="$(echo "${params}" | jq -r '.repository // ""')"
new_status="$(echo "${params}" | jq -r '.status // ""')"

if [ -z "${path_to_repo}" ]; then
  echo "please specify a repository" >&2
  exit 1
fi
if [ -z "${new_status}" ]; then
  echo "please specify a status" >&2
  exit 1
fi

project_path_encoded="${project_path//'/'/'%2F'}" # url encode "/"

target_url="${ATC_EXTERNAL_URL}/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}"

cd "${destination}"
cd "${path_to_repo}"

commit_sha="$(git rev-parse HEAD)"

curl \
--request POST \
--header "PRIVATE-TOKEN: ${private_token}" \
--header "Content-Type: application/json" \
--data "{\"state\":\"${new_status}\",\"name\":\"concourse\",\"target_url\":\"${target_url}\"}" \
"https://${gitlab_host}/api/v3/projects/${project_path_encoded}/statuses/${commit_sha}"

version="{\"sha\":\"${commit_sha}\"}"

jq -n "{
  version: ${version},
  metadata: $(git_metadata)
}" >&3
